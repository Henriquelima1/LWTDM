24-10-27 21:05:32.919 - INFO:   name: sr_lwtdm
  phase: train
  gpu_ids: [0]
  path:[
    log: experiments/sr_lwtdm_241027_210532/logs
    tb_logger: experiments/sr_lwtdm_241027_210532/tb_logger
    results: experiments/sr_lwtdm_241027_210532/results
    checkpoint: experiments/sr_lwtdm_241027_210532/checkpoint
    resume_state: None
    experiments_root: experiments/sr_lwtdm_241027_210532
  ]
  datasets:[
    train:[
      name: AID
      mode: HR
      dataroot: path/to/datasetOmniD_256_1024
      datatype: img
      l_resolution: 256
      r_resolution: 1024
      batch_size: 24
      num_workers: 12
      use_shuffle: True
      data_len: -1
    ]
    val:[
      name: RSSCN7
      mode: LRHR
      dataroot: path/to/datasetOmniD_256_1024
      datatype: img
      l_resolution: 256
      r_resolution: 1024
      data_len: 3
    ]
  ]
  model:[
    which_model_G: lwtdm
    finetune_norm: False
    enet:[
      in_channel: 3
      out_channel: 3
      inner_channel: 32
      channel_multiplier: [12, 12]
      attn_res: 2
      res_blocks: 2
      dropout: 0.1
    ]
    beta_schedule:[
      train:[
        schedule: linear
        n_timestep: 2000
        linear_start: 0.0005
        linear_end: 0.02
      ]
      val:[
        schedule: linear
        n_timestep: 2000
        linear_start: 0.0005
        linear_end: 0.02
        sampling_timesteps: 2000
        ddim_sampling_eta: 0.0
      ]
    ]
    diffusion:[
      image_size: 224
      channels: 3
      conditional: True
    ]
  ]
  train:[
    n_iter: 2000000
    val_freq: 100000.0
    save_checkpoint_freq: 100000.0
    print_freq: 200
    optimizer:[
      type: adam
      lr: 0.0001
    ]
    ema_scheduler:[
      step_start_ema: 5000
      update_ema_every: 1
      ema_decay: 0.9999
    ]
  ]
  wandb:[
    project: sr_lwtdm
  ]
  distributed: False
  log_wandb_ckpt: False
  log_eval: False
  enable_wandb: False

24-10-27 21:05:32.929 - INFO: Dataset [LRHRDataset2 - AID] is created.
24-10-27 21:05:32.934 - INFO: Dataset [LRHRDataset2 - RSSCN7] is created.
24-10-27 21:05:32.934 - INFO: Initial Dataset Finished
24-10-27 21:05:33.074 - INFO: Initialization method [orthogonal]
24-10-27 21:05:33.552 - INFO: Network G structure: GaussianDiffusion, with parameters: 11,590,587
24-10-27 21:05:33.552 - INFO: GaussianDiffusion(
  (denoise_fn): Net(
    (time_mlp): Sequential(
      (0): TimeEmbedding()
      (1): Linear(in_features=32, out_features=128, bias=True)
      (2): Swish()
      (3): Linear(in_features=128, out_features=32, bias=True)
    )
    (downs): ModuleList(
      (0): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=24, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(3, 24, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(3, 24, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (2): PixelUnshuffle(downscale_factor=2)
      (3): ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=96, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(12, 96, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(12, 96, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (4): PixelUnshuffle(downscale_factor=2)
    )
    (fusions): ModuleList(
      (0): Upsample(
        (up): Upsample(scale_factor=8.0, mode='nearest')
        (conv): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): Upsample(
        (up): Upsample(scale_factor=8.0, mode='nearest')
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (mid): ModuleList(
      (0): ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=384, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (1): CrossAttention(
        (q): Conv2d(384, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (kv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (out): Conv2d(32, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (2): ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=384, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (3): CrossAttention(
        (q): Conv2d(384, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (kv): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (out): Conv2d(32, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (ups): ModuleList(
      (0-1): 2 x ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=384, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(32, 384, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (2): PixelShuffle(upscale_factor=2)
      (3-4): 2 x ResnetBlocks(
        (res_block): ResnetBlock(
          (mlp): Sequential(
            (0): Swish()
            (1): Linear(in_features=32, out_features=96, bias=True)
          )
          (block1): Block(
            (block): Sequential(
              (0): GroupNorm(12, 96, eps=1e-05, affine=True)
              (1): Swish()
              (2): Identity()
              (3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (block2): Block(
            (block): Sequential(
              (0): GroupNorm(12, 96, eps=1e-05, affine=True)
              (1): Swish()
              (2): Dropout(p=0.1, inplace=False)
              (3): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (res_conv): Identity()
        )
      )
      (5): PixelShuffle(upscale_factor=2)
    )
    (final_conv): Block(
      (block): Sequential(
        (0): GroupNorm(3, 24, eps=1e-05, affine=True)
        (1): Swish()
        (2): Identity()
        (3): Conv2d(24, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
  (loss_func): L1Loss()
)
24-10-27 21:05:33.552 - INFO: Model [DDPM] is created.
24-10-27 21:05:33.552 - INFO: Initial Model Finished
